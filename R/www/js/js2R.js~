// turns the options into a string to feed into R
function getOptions(prefs){
    var out = "";
    var plotdevice = prefs.settings.plotdevice;
    var settings = prefs.settings[plotdevice];
    switch (plotdevice){
    case 'concordia':
	var mint = isValidAge(settings.mint) ? settings.mint : null;
	var maxt = isValidAge(settings.maxt) ? settings.maxt : null;
	if (mint != null | maxt != null){
	    out += "limits=c(";
	    if (mint == null) { out += "0"; } else { out += mint; }
	    if (maxt == null) { out += ",3500)"; } else { out += "," + maxt + ")"; }
	} else {
	    out += "limits=NULL"
	}
	out += ",alpha=" + settings.alpha;
	out += ",wetherill=" + settings.wetherill;
	out += ",dcu=" + settings.dcu;
	out += ",show.numbers=" + settings.shownumbers;
	out += ",show.age=" + settings.showage;
	break;
    default:
    }
    return out;
}

function getRcommand(prefs){
    var geochronometer = prefs.settings.geochronometer;
    var plotdevice = prefs.settings.plotdevice;
    var out = "dat <- selection2data(method='" + geochronometer + "');";
    out += "I.R('U238U235',x=" + prefs.constants['I.R'].U238U235[0] + 
  	",e=" + prefs.constants['I.R'].U238U235[1] + ");"
    switch (geochrometer){
    case 'U-Pb': 
	switch (plotdevice) {
	case 'concordia': out += "concordia.plot"; break;
	}
    case 'detritals':
	switch (plotdevice) {
	case 'KDE': out += "kde"; break;
	}
    }
    var options = getOptions();
    out += "(dat," + options + ");";
    return out;
}
